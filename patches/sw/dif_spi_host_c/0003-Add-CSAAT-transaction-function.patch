From 09cf24933253a9223aebe1049a52a92da1647e8b Mon Sep 17 00:00:00 2001
From: Paul Scheffler <paulsc@iis.ee.ethz.ch>
Date: Tue, 28 Feb 2023 23:28:51 +0100
Subject: [PATCH] Add CSAAT transaction function

---
 dif_spi_host.c | 23 ++++++++++++++++++++---
 1 file changed, 20 insertions(+), 3 deletions(-)

diff --git a/dif_spi_host.c b/dif_spi_host.c
index ac8fab4d0..86afcc700 100644
--- a/dif_spi_host.c
+++ b/dif_spi_host.c
@@ -395,17 +395,19 @@ static dif_result_t issue_data_phase(const dif_spi_host_t *spi_host,
   return kDifOk;
 }
 
-dif_result_t dif_spi_host_transaction(const dif_spi_host_t *spi_host,
+static inline dif_result_t spi_host_transaction(const dif_spi_host_t *spi_host,
                                       uint32_t csid,
                                       dif_spi_host_segment_t *segments,
-                                      size_t length) {
+                                      size_t length,
+                                      int csaat) {
   // Write to chip select ID.
   mmio_region_write32(spi_host->base_addr, SPI_HOST_CSID_REG_OFFSET, csid);
 
   // For each segment, write the segment information to the
   // COMMAND register and transmit FIFO.
   for (size_t i = 0; i < length; ++i) {
-    bool last_segment = i == length - 1;
+    // Only signal last segment if CSAAT is not requested
+    bool last_segment = !csaat && (i == length - 1);
     wait_ready(spi_host);
     dif_spi_host_segment_t *segment = &segments[i];
     switch (segment->type) {
@@ -449,3 +451,18 @@ dif_result_t dif_spi_host_transaction(const dif_spi_host_t *spi_host,
   }
   return kDifOk;
 }
+
+dif_result_t dif_spi_host_transaction(const dif_spi_host_t *spi_host,
+                                      uint32_t csid,
+                                      dif_spi_host_segment_t *segments,
+                                      size_t length) {
+  return spi_host_transaction(spi_host, csid, segments, length, 0);
+}
+
+
+dif_result_t dif_spi_host_transaction_csaat(const dif_spi_host_t *spi_host,
+                                            uint32_t csid,
+                                            dif_spi_host_segment_t *segments,
+                                            size_t length) {
+  return spi_host_transaction(spi_host, csid, segments, length, 1);
+}
-- 
2.16.5

