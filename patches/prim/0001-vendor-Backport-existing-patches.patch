From 607ebb34ae1ded76f0adb64803a27fa7e361e932 Mon Sep 17 00:00:00 2001
From: Paul Scheffler <paulsc@iis.ee.ethz.ch>
Date: Mon, 13 Feb 2023 22:53:02 +0100
Subject: [PATCH] vendor:	Backport existing patches

---
 prim_pulp_platform/prim_flop_2sync.sv | 31 +++++++++++++++++++++++++++++++
 rtl/prim_fifo_async.sv                |  2 +-
 rtl/prim_fifo_sync.sv                 |  2 +-
 rtl/prim_packer_fifo.sv               |  2 +-
 rtl/prim_sync_reqack.sv               |  2 +-
 rtl/prim_sync_reqack_data.sv          |  2 +-
 6 files changed, 36 insertions(+), 5 deletions(-)
 create mode 100644 hw/ip/prim/prim_pulp_platform/prim_flop_2sync.sv

diff --git a/prim_pulp_platform/prim_flop_2sync.sv b/prim_pulp_platform/prim_flop_2sync.sv
new file mode 100644
index 000000000..e68f1010b
--- /dev/null
+++ b/prim_pulp_platform/prim_flop_2sync.sv
@@ -0,0 +1,31 @@
+// Copyright 2021 ETH Zurich and University of Bologna.
+// Licensed under the Apache License, Version 2.0, see LICENSE for details.
+// SPDX-License-Identifier: Apache-2.0
+//
+// Double-synchronizer flop implementation for opentitan primitive cells
+// using cells from pulp_platform common_cells.
+
+module prim_flop_2sync #(
+  parameter int               Width      = 16,
+  parameter logic [Width-1:0] ResetValue = '0
+) (
+  input  logic clk_i,
+  input  logic rst_ni,
+  input  logic [Width-1:0] d_i,
+  output logic [Width-1:0] q_o
+);
+
+  // Note that multi-bit syncs are *almost always* a bad idea.
+  for (genvar i = 0; i < Width; ++i) begin : gen_syncs
+    sync #(
+      .STAGES     (2),
+      .ResetValue (ResetValue[i])
+    ) i_sync (
+      .clk_i,
+      .rst_ni,
+      .serial_i (d_i[i]),
+      .serial_o (q_o[i])
+    );
+  end
+
+endmodule
diff --git a/rtl/prim_fifo_async.sv b/rtl/prim_fifo_async.sv
index 0edebc768..df90ccdcc 100644
--- a/rtl/prim_fifo_async.sv
+++ b/rtl/prim_fifo_async.sv
@@ -4,7 +4,7 @@
 //
 // Generic asynchronous fifo for use in a variety of devices.
 
-`include "prim_assert.sv"
+`include "common_cells/assertions.svh"
 
 module prim_fifo_async #(
   parameter  int unsigned Width  = 16,
diff --git a/rtl/prim_fifo_sync.sv b/rtl/prim_fifo_sync.sv
index 5e9ee9c3e..1d786830d 100644
--- a/rtl/prim_fifo_sync.sv
+++ b/rtl/prim_fifo_sync.sv
@@ -4,7 +4,7 @@
 //
 // Generic synchronous fifo for use in a variety of devices.
 
-`include "prim_assert.sv"
+`include "common_cells/assertions.svh"
 
 module prim_fifo_sync #(
   parameter int unsigned Width       = 16,
diff --git a/rtl/prim_packer_fifo.sv b/rtl/prim_packer_fifo.sv
index 95c143da5..57781d41d 100644
--- a/rtl/prim_packer_fifo.sv
+++ b/rtl/prim_packer_fifo.sv
@@ -39,7 +39,7 @@
 // depth_o    0000000000|1111111111|00000000000000000000000000000000000000000
 
 
-`include "prim_assert.sv"
+`include "common_cells/assertions.svh"
 
 module prim_packer_fifo #(
   parameter int InW  = 32,
diff --git a/rtl/prim_sync_reqack.sv b/rtl/prim_sync_reqack.sv
index 518546fae..33c679f85 100644
--- a/rtl/prim_sync_reqack.sv
+++ b/rtl/prim_sync_reqack.sv
@@ -29,7 +29,7 @@
 // For further information, see Section 8.2.4 in H. Kaeslin, "Top-Down Digital VLSI Design: From
 // Architecture to Gate-Level Circuits and FPGAs", 2015.
 
-`include "prim_assert.sv"
+`include "common_cells/assertions.svh"
 
 module prim_sync_reqack #(
   parameter bit EnRstChks = 1'b0,   // Enable reset-related assertion checks, disabled by default.
diff --git a/rtl/prim_sync_reqack_data.sv b/rtl/prim_sync_reqack_data.sv
index c4ef5e321..ba1ce5a4c 100644
--- a/rtl/prim_sync_reqack_data.sv
+++ b/rtl/prim_sync_reqack_data.sv
@@ -14,7 +14,7 @@
 // Under the hood, this module uses a prim_sync_reqack primitive for synchronizing the
 // REQ/ACK handshake. See prim_sync_reqack.sv for more details.
 
-`include "prim_assert.sv"
+`include "common_cells/assertions.svh"
 
 module prim_sync_reqack_data #(
   parameter int unsigned Width       = 1,
-- 
2.16.5

