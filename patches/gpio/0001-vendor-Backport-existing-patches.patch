From 980f7d7e152c88fee56abadcae4b0a069f282a9f Mon Sep 17 00:00:00 2001
From: Paul Scheffler <paulsc@iis.ee.ethz.ch>
Date: Mon, 13 Feb 2023 22:53:06 +0100
Subject: [PATCH] vendor:	Backport existing patches

---
 data/gpio.hjson |  4 ++--
 rtl/gpio.sv     | 49 ++++++++++++-------------------------------------
 2 files changed, 14 insertions(+), 39 deletions(-)

diff --git a/data/gpio.hjson b/data/gpio.hjson
index 0da3efc50..762ce26ad 100644
--- a/data/gpio.hjson
+++ b/data/gpio.hjson
@@ -27,9 +27,9 @@
       notes:              ""
     }
   ]
-  clocking: [{clock: "clk_i", reset: "rst_ni"}],
+  clock_primary: "clk_i",
   bus_interfaces: [
-    { protocol: "tlul", direction: "device" }
+    { protocol: "reg_iface", direction: "device" }
   ],
   available_inout_list: [
     { name: "gpio",
diff --git a/rtl/gpio.sv b/rtl/gpio.sv
index a906248f4..27c7df0eb 100644
--- a/rtl/gpio.sv
+++ b/rtl/gpio.sv
@@ -5,28 +5,26 @@
 // General Purpose Input/Output module
 
 `include "prim_assert.sv"
+`include "common_cells/assertions.svh"
 
 module gpio
   import gpio_reg_pkg::*;
 #(
-  parameter logic [NumAlerts-1:0] AlertAsyncOn = {NumAlerts{1'b1}},
+  parameter type reg_req_t = logic,
+  parameter type reg_rsp_t = logic,
   // This parameter instantiates 2-stage synchronizers on all GPIO inputs.
   parameter bit GpioAsyncOn = 1
 ) (
   input clk_i,
   input rst_ni,
 
-  // Bus interface
-  input  tlul_pkg::tl_h2d_t tl_i,
-  output tlul_pkg::tl_d2h_t tl_o,
+  // Below Register interface can be changed
+  input  reg_req_t reg_req_i,
+  output reg_rsp_t reg_rsp_o,
 
   // Interrupts
   output logic [31:0] intr_gpio_o,
 
-  // Alerts
-  input  prim_alert_pkg::alert_rx_t [NumAlerts-1:0] alert_rx_i,
-  output prim_alert_pkg::alert_tx_t [NumAlerts-1:0] alert_tx_o,
-
   // GPIOs
   input        [31:0] cio_gpio_i,
   output logic [31:0] cio_gpio_o,
@@ -144,42 +142,20 @@ module gpio
                                event_intr_actlow |
                                event_intr_acthigh;
 
-  // Alerts
-  logic [NumAlerts-1:0] alert_test, alerts;
-  assign alert_test = {
-    reg2hw.alert_test.q &
-    reg2hw.alert_test.qe
-  };
-
-  for (genvar i = 0; i < NumAlerts; i++) begin : gen_alert_tx
-    prim_alert_sender #(
-      .AsyncOn(AlertAsyncOn[i]),
-      .IsFatal(1'b1)
-    ) u_prim_alert_sender (
-      .clk_i,
-      .rst_ni,
-      .alert_test_i  ( alert_test[i] ),
-      .alert_req_i   ( alerts[0]     ),
-      .alert_ack_o   (               ),
-      .alert_state_o (               ),
-      .alert_rx_i    ( alert_rx_i[i] ),
-      .alert_tx_o    ( alert_tx_o[i] )
-    );
-  end
-
   // Register module
-  gpio_reg_top u_reg (
+  gpio_reg_top #(
+    .reg_req_t (reg_req_t),
+    .reg_rsp_t (reg_rsp_t)
+  ) u_reg (
     .clk_i,
     .rst_ni,
 
-    .tl_i,
-    .tl_o,
+    .reg_req_i,
+    .reg_rsp_o,
 
     .reg2hw,
     .hw2reg,
 
-    // SEC_CM: BUS.INTEGRITY
-    .intg_err_o (alerts[0]),
     .devmode_i  (1'b1)
   );
 
@@ -187,7 +163,6 @@ module gpio
   `ASSERT_KNOWN(IntrGpioKnown, intr_gpio_o)
   `ASSERT_KNOWN(CioGpioEnOKnown, cio_gpio_en_o)
   `ASSERT_KNOWN(CioGpioOKnown, cio_gpio_o)
-  `ASSERT_KNOWN(AlertsKnown_A, alert_tx_o)
 
   // Alert assertions for reg_we onehot check
   `ASSERT_PRIM_REG_WE_ONEHOT_ERROR_TRIGGER_ALERT(RegWeOnehotCheck_A, u_reg, alert_tx_o[0])
-- 
2.16.5

